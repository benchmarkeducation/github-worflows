name: Yarn Test Workflow
on:
  workflow_call:
    inputs:
      packageJsonPath:
        required: true
        type: string
      environment:
        required: true
        type: string
      workingDirectory:
        description: The root directory for the frontend code base
        required: false
        default: '.'
        type: string
      branch:
        required: false
        default: ${{ github.ref }}
        type: string
      files:
        required: false
        default: 'none'
        type: string      
      nodeVersion:
        required: false
        default: '14.19'
        type: string 
      testConditions:
        required: false
        default: ''
        type: string 

jobs:
  yarn-test:
    defaults:
      run:
        working-directory: ${{ inputs.workingDirectory }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          cache-dependency-path: ${{ inputs.packageJsonPath }}
          node-version: ${{ inputs.nodeVersion }}     
      - name: Token for the required repositories
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SCRATCH_USER_ACCESS_TOKEN }}
      - name: Clean cache
        run: yarn cache clean
      - if: ${{ inputs.environment == 'qa' && inputs.files != 'none' }} 
        name: Pull required repositories
        run: for f in ${{ inputs.files }}; do yarn add github:benchmarkeducation/$f#develop ; done
      - name: Install dependencies
        run: yarn install --immutable
      - name: Run test
        id: test
        run: yarn test  ${{ inputs.testConditions }}
      - name: Send Teams Notification notification for failed test
        uses: skitionek/notify-microsoft-teams@master
        if: ${{ failure() && steps.test.conclusion == 'failure' }}
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          raw: >-
            {
              "text": "FAILED: Deployment to ${{ inputs.environment }} for ${{ github.repository }} ${{ inputs.branch }} branch failed due to broken test. Test need to be fixed."
            }
