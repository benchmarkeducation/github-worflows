name: Maven Build and Deploy
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      branch:
        required: false
        default: ${{ github.ref }}
        type: string
      workingDirectory:
        required: false
        default: '.'
        type: string
      javaVersion:
        required: true
        type: string
      elasticBeanstalkApplication:
        required: true
        type: string      

jobs:
  maven-build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.workingDirectory }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
            node-version: '10.23'
      - uses: borales/actions-yarn@v3.0.0
        with:
          cmd: install # will run `yarn install` command
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
            distribution: 'corretto'
            java-version: 8
            cache: 'maven'
      - name: dependency
      - run: ./mvnw dependency:go-offline
      - name: Build 
        run: ./mvnw package -DskipTests
      - name: Send Teams notification for failed build
        uses: skitionek/notify-microsoft-teams@master
        if: ${{ failure() && steps.build.conclusion == 'failure' }}
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          raw: >-
            {
              "text": "FAILED: Deployment to ${{ inputs.environment }} for ${{ github.repository }} ${{ inputs.branch }} branch failed due to build failure. Build needs to be fixed."
            }
      - name: Deploy to Elastic Beanstalk
        id: deploy1
        if: ${{ inputs.environment != false && (github.event.pull_request.merged == true || inputs.environment == 'production' || (inputs.environment == 'staging' && github.event_name == 'push')) }}
        run: |
            echo "Installing Elastic Beanstalk Cli"
            pip install awsebcli --upgrade

            NOW=$(date +"%m%d%Y_%H%M")
            BRANCH_DETAIL="${{ inputs.branch }}"
            strarr=($(echo $BRANCH_DETAIL | tr "\/" "\n"))
            COUNT=${#strarr[@]}
            if [[ $COUNT -gt 1 ]]
            then
              BRANCH_DETAIL=${strarr[1]}
            fi

            eb deploy --timeout 20 ${{ inputs.elasticBeanstalkApplication }}-${{ inputs.environment }} -l $(printf "%s_%s" "$BRANCH_DETAIL" "$NOW")
      - name: Send Teams notification for failed deployment
        uses: skitionek/notify-microsoft-teams@master
        if: ${{ failure() && inputs.environment != false && (github.event.pull_request.merged == true || inputs.environment == 'production' || inputs.environment == 'production' || (inputs.environment == 'staging' && github.event_name == 'push')) && steps.deploy1.conclusion == 'failure' }}
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          raw: >-
            {
              "text": "FAILED: Deployment to ${{ inputs.environment }} for ${{ github.repository }} ${{ inputs.branch }} branch failed during the deployment phase. See workflow for more information"
            }
      - name: Send Teams notification for successful deployment
        uses: skitionek/notify-microsoft-teams@master
        if: ${{ success() && inputs.environment != false && (github.event.pull_request.merged == true || inputs.environment == 'production' || inputs.environment == 'production' || (inputs.environment == 'staging' && github.event_name == 'push')) }}
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          raw: >-
            {
              "text": "Deploying ${{ github.repository }} ${{ inputs.branch }} to ${{ inputs.environment }} has completed"
            }
